version: '3.8'

services:
  mongodb:
    image: mongo:latest
    container_name: mongodb
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka
    ports:
      - "9092:9092"
      - "29092:29092"
    depends_on:
      - zookeeper
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:29092,PLAINTEXT_HOST://0.0.0.0:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  user-service:
    build:
      context: ./user-service
      dockerfile: Dockerfile
    container_name: user-service
    ports:
      - "3001:3001"
    environment:
      MONGO_URI: mongodb://mongodb:27017/user-service
      PORT: 3001
      JWT_SECRET: ${JWT_SECRET}
      KAFKA_BROKER: kafka:29092
    depends_on:
      - mongodb
      - kafka

  product-service:
    build:
      context: ./product-service
      dockerfile: Dockerfile
    container_name: product-service
    ports:
      - "3002:3002"
    environment:
      MONGO_URI: mongodb://mongodb:27017/product-service
      PORT: 3002
      JWT_SECRET: ${JWT_SECRET}
      KAFKA_BROKER: kafka:29092
    depends_on:
      - mongodb
      - kafka

  order-service:
    build:
      context: ./order-service
      dockerfile: Dockerfile
    container_name: order-service
    ports:
      - "3003:3003"
    environment:
      MONGO_URI: mongodb://mongodb:27017/order-service
      PORT: 3003
      JWT_SECRET: ${JWT_SECRET}
      KAFKA_BROKER: kafka:29092
    depends_on:
      - mongodb
      - kafka

volumes:
  mongodb_data: